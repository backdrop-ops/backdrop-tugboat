services:

  # What to call the service hosting the site.
  php:

    # Use PHP 7.2 with Apache
    image: tugboatqa/php:7.2-apache-stretch

    # Set this as the default service. This does a few things
    #   1. Clones the git repository into the service container
    #   2. Exposes port 80 to the Tugboat HTTP proxy
    #   3. Routes requests to the preview URL to this service
    default: true

    # Set up aliases for the domain.
    alias_type: domain
    aliases:
      - demo.backdropcms.org

    # Wait until the mysql service is done building
    depends: mysql

    # A set of commands to run while building this service
    commands:

      # Commands that set up the basic preview infrastructure
      init:
        # Add in extra PHP settings. Note the file renaming.
        - cp "${TUGBOAT_ROOT}/.tugboat/php.ini"  /usr/local/etc/php/conf.d/backdrop-php.ini

        # Install prerequisite packages
        - apt-get update
        - apt-get install -y mysql-client
        - docker-php-ext-install opcache zip
        - a2enmod rewrite expires headers

        # Link the document root to the expected path. Tugboat uses /docroot
        # by default. So, if Backdrop is located at any other path in your git
        # repository, change that here. This example links /web to the docroot
        - ln -snf "${TUGBOAT_ROOT}" "${DOCROOT}"

      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:

        # Use the tugboat-specific Backdrop settings.
        - cp "${TUGBOAT_ROOT}/.tugboat/settings.local.php" "${TUGBOAT_ROOT}/settings.local.php"

        # Generate a unique hash_salt to secure the site.
        - echo "\$settings['hash_salt'] = '$(openssl rand -hex 32)';" >> "${TUGBOAT_ROOT}/settings.local.php"

        # Create and set the config directory.
        - mkdir "${TUGBOAT_ROOT}/files/config_$TUGBOAT_PREVIEW_ID"
        - mkdir "${TUGBOAT_ROOT}/files/config_$TUGBOAT_PREVIEW_ID/active"
        - mkdir "${TUGBOAT_ROOT}/files/config_$TUGBOAT_PREVIEW_ID/staging"
        - echo "\$config_directories['active'] = 'files/config_$TUGBOAT_PREVIEW_ID/active';" >> "${TUGBOAT_ROOT}/settings.local.php"
        - echo "\$config_directories['staging'] = 'files/config_$TUGBOAT_PREVIEW_ID/staging';" >> "${TUGBOAT_ROOT}/settings.local.php"

        # For full install capabilities (self-updating, module installs), make
        # the entire installation web-writable.
        - chown -R www-data:www-data "${TUGBOAT_ROOT}"
        - find "${TUGBOAT_ROOT}/files" "${TUGBOAT_ROOT}/layouts" "${TUGBOAT_ROOT}/modules" "${TUGBOAT_ROOT}/themes" -type d -exec chmod 2775 {} \;
        - find "${TUGBOAT_ROOT}/files" "${TUGBOAT_ROOT}/layouts" "${TUGBOAT_ROOT}/modules" "${TUGBOAT_ROOT}/themes" -type f -exec chmod 0664 {} \;

        # Install Backdrop.
        - cd ${TUGBOAT_ROOT} && ./core/scripts/install.sh --db-url=mysql://tugboat:tugboat@mysql/backdrop --account-pass=password

        # Fix config permissions after install.
        - chown -R www-data:www-data "${TUGBOAT_ROOT}/files/config_$TUGBOAT_PREVIEW_ID/active"
        - find "${TUGBOAT_ROOT}/files/config_$TUGBOAT_PREVIEW_ID/active" -type f -exec chmod 0664 {} \;

      # Commands that build the site. This is where you would add things
      # like feature reverts or any other drush commands required to
      # set up or configure the site. When a preview is built from a
      # base preview, the build workflow starts here, skipping the init
      # and update steps, because the results of those are inherited
      # from the base preview.
      build:

        # Generate and display a login URL.
        - cd ${TUGBOAT_ROOT} && ./.tugboat/auto-login.sh

  # What to call the service hosting MySQL. This name also acts as the
  # hostname to access the service by from the php service.
  mysql:

    # Use the latest available 5.x version of MySQL
    image: tugboatqa/mysql:5.6

    # A set of commands to run while building this service
    commands:
      init:
        # Configure MySQL for UTF8-MB4: https://api.backdropcms.org/database-configuration
        - printf "[mysqld]\ninnodb_large_prefix=true\ninnodb_file_format=barracuda\ninnodb_file_per_table=true\n" >> /etc/mysql/conf.d/utf8mb.conf
        - mysql -e "CREATE DATABASE backdrop; GRANT ALL PRIVILEGES ON backdrop.* TO 'tugboat'@'%';"

      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:

        # Copy a database dump from an external server. The public
        # SSH key found in the Tugboat Repository configuration must be
        # copied to the external server in order to use scp.
        #- scp user@example.com:database.sql.gz /tmp/database.sql.gz
        #- zcat /tmp/database.sql.gz | mysql tugboat
        #- rm /tmp/database.sql.gz

